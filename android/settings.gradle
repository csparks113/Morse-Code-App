pluginManagement {
  def reactNativeGradlePlugin = new File(
    providers.exec {
      workingDir(rootDir)
      commandLine("node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })")
    }.standardOutput.asText.get().trim()
  ).getParentFile().absolutePath
  includeBuild(reactNativeGradlePlugin)
  
  def expoPluginsPath = new File(
    providers.exec {
      workingDir(rootDir)
      commandLine("node", "--print", "require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })")
    }.standardOutput.asText.get().trim(),
    "../android/expo-gradle-plugin"
  ).absolutePath
  includeBuild(expoPluginsPath)
}

plugins {
  id("com.facebook.react.settings")
  id("expo-autolinking-settings")
}

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {
    ex.autolinkLibrariesFromCommand()
  } else {
    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)
  }
}
expoAutolinking.useExpoModules()

rootProject.name = 'Morse Code Master'

dependencyResolutionManagement {
  versionCatalogs {
    create("libs") {
      from(files("../node_modules/react-native/gradle/libs.versions.toml"))
    }
  }
}

expoAutolinking.useExpoVersionCatalog()

include ':app'
includeBuild("../node_modules/react-native") {
  dependencySubstitution {
    substitute(module("com.facebook.react:react-native")) using project(":packages:react-native:ReactAndroid")
    substitute(module("com.facebook.react:react-android")) using project(":packages:react-native:ReactAndroid")
    substitute(module("com.facebook.react:hermes-android")) using project(":packages:react-native:ReactAndroid:hermes-engine")
  }
}
includeBuild(expoAutolinking.reactNativeGradlePlugin)
